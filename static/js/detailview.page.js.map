{"version":3,"sources":["webpack:///./src/views/Books/detailview.page.js","webpack:///./src/components/Page.js"],"names":["productViewCustomStyles","makeStyles","theme","mainBlock","_defineProperty","display","justifyContent","alignItems","flexDirection","breakpoints","up","leftBlock","width","marginLeft","marginTop","marginRight","down","largeImage","position","mainImage","height","rightBlock","marginBottom","maginLerft","title","fontSize","fontWeight","lineHeight","price","buttonContainer","button","description","rating","paragraph","DetailViewPage","params","useParams","books","useSelector","state","dispatch","useDispatch","currBook","find","book","id","parseInt","currBookRef","useRef","_useState2","_slicedToArray","useState","isFavLoadingSpin","setIsFavLoadingSpin","_useState4","isCartLoadingSpin","setIsCartLoadingSpin","customStyles","handleRecordVisitHistory","payload","privateApiPOST","Api","record_visit","then","response","status","data","console","log","message","error","navigate","handleEditProduct","edit_book","setBooks","useEffect","current","setLoadingSpin","privateApiGET","React","createElement","Page","length","Box","sx","className","Avatar","variant","src","image","alt","Typography","Button","is_favourite","onClick","CircularProgress","size","color","is_item_in_cart","quantity","Rating","name","defaultValue","precision","readOnly","split","map","line","index","trim","Fragment","key","component","author","forwardRef","_ref","ref","children","_ref$title","rest","_objectWithoutProperties","_excluded","_extends","Helmet","propTypes","PropTypes","node","isRequired","string"],"mappings":"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","file":"detailview.page.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Page from \"../../components/Page\";\r\nimport axios from \"axios\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Avatar,\r\n  CircularProgress,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport { privateApiGET, privateApiPOST } from \"../../components/PrivateRoute\";\r\nimport Api from \"../../components/Api\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setBooks } from \"../../redux/bookStore/booksSlice\";\r\nimport { setLoadingSpin } from \"../../redux/bookStore/booksSlice\";\r\nimport Rating from \"@mui/material/Rating\";\r\n\r\nconst productViewCustomStyles = makeStyles((theme) => ({\r\n  mainBlock: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      flexDirection: \"row\",\r\n    },\r\n  },\r\n  leftBlock: {\r\n    width: \"40vw\",\r\n    marginLeft: \"5vw\",\r\n    marginTop: \"1rem\",\r\n    marginRight: \"5vw\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"80vw\",\r\n      marginLeft: \"10vw\",\r\n      marginRight: \"10vw\",\r\n    },\r\n  },\r\n  largeImage: {\r\n    position: \"relative\",\r\n  },\r\n  mainImage: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n\r\n  rightBlock: {\r\n    width: \"40vw\",\r\n    marginRight: \"10vw\",\r\n    marginTop: \"5rem\",\r\n    marginBottom: \"auto\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: \"80vw\",\r\n      maginLerft: \"10vw\",\r\n      marginRight: \"10vw\",\r\n      marginTop: \"1rem\",\r\n    },\r\n  },\r\n\r\n  title: {\r\n    fontSize: \"24px\",\r\n    fontWeight: \"540\",\r\n    lineHeight: \"27px\",\r\n    marginBottom: \"16px\",\r\n  },\r\n  price: {\r\n    fontWeight: \"700\",\r\n    fontSize: \"21px\",\r\n    lineHeight: \"24px\",\r\n    marginBottom: \"24px\",\r\n  },\r\n\r\n  buttonContainer: {\r\n    justifyContent: \"center\",\r\n    marginTop: \"1rem\",\r\n  },\r\n\r\n  button: {\r\n    marginRight: \"1rem\",\r\n  },\r\n\r\n  description: {\r\n    fontSize: \"21px\",\r\n    fontWeight: \"600\",\r\n    lineHeight: \"24px\",\r\n    marginTop: \"36px\",\r\n    marginBottom: \"-24px\",\r\n  },\r\n\r\n  rating: {\r\n    marginTop: \"20px\",\r\n  },\r\n  paragraph: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"19px\",\r\n  },\r\n}));\r\n\r\nconst DetailViewPage = () => {\r\n  const params = useParams();\r\n  const books = useSelector((state) => state.books.books);\r\n  const dispatch = useDispatch();\r\n  const currBook = books.find((book) => book.id === parseInt(params.id));\r\n  let currBookRef = useRef(params.id);\r\n  const [isFavLoadingSpin, setIsFavLoadingSpin] = useState(false);\r\n  const [isCartLoadingSpin, setIsCartLoadingSpin] = useState(false);\r\n  const customStyles = productViewCustomStyles();\r\n\r\n  const handleRecordVisitHistory = () => {\r\n    let payload = { id: params.id };\r\n    privateApiPOST(Api.record_visit, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        console.log(\"data\", data?.message);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        if (error.response.status === 401) {\r\n          navigate(\"/login\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleEditProduct = (data) => {\r\n    let payload = data;\r\n    privateApiPOST(Api.edit_book, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          dispatch(setBooks(data?.data));\r\n          setIsFavLoadingSpin(false);\r\n          setIsCartLoadingSpin(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setIsFavLoadingSpin(false);\r\n        setIsCartLoadingSpin(false);\r\n        if (error.response.status === 401) {\r\n          navigate(\"/login\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleFavouriteClick = () => {\r\n    const data = {\r\n      id: currBook.id,\r\n      title: currBook.title,\r\n      is_favourite: !currBook.is_favourite,\r\n    };\r\n    setIsFavLoadingSpin(true);\r\n    handleEditProduct(data);\r\n  };\r\n\r\n  const handleAddToCartClick = () => {\r\n    const data = {\r\n      id: currBook.id,\r\n      title: currBook.title,\r\n      is_item_in_cart: !currBook.is_item_in_cart,\r\n      quantity: currBook.quantity + 1,\r\n    };\r\n    setIsCartLoadingSpin(true);\r\n    handleEditProduct(data);\r\n  };\r\n\r\n  const handleFetchbooks = () => {\r\n    setLoadingSpin(true);\r\n    privateApiGET(Api.books)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          // Dispatch the setBooks action with the fetched data\r\n          dispatch(setBooks(data?.data));\r\n          setLoadingSpin(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setLoadingSpin(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (params.id !== currBookRef.current) {\r\n      handleRecordVisitHistory();\r\n    }\r\n  }, [currBook]);\r\n\r\n  useEffect(() => {\r\n    handleFetchbooks();\r\n    handleRecordVisitHistory();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title=\"books\">\r\n      {books.length > 0 && currBook ? (\r\n        <Box sx={{ marginTop: \"10px\" }}>\r\n          <Box className={customStyles.mainBlock}>\r\n            <Box className={customStyles.leftBlock}>\r\n              <Box className={customStyles.largeImage}>\r\n                <Box sx={{ position: \"relative\" }}>\r\n                  <Avatar\r\n                    className={customStyles.mainImage}\r\n                    variant=\"square\"\r\n                    src={currBook.image}\r\n                    alt={currBook.title}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n            <Box className={customStyles.rightBlock}>\r\n              <Typography className={customStyles.title}>\r\n                {currBook.title}\r\n              </Typography>\r\n              {currBook && currBook[\"price\"] && (\r\n                <Typography className={customStyles.price}>\r\n                  Rs. {currBook.price}\r\n                </Typography>\r\n              )}\r\n              <Box className={customStyles.buttonContainer}>\r\n                <Button\r\n                  variant={currBook.is_favourite ? \"contained\" : \"outlined\"}\r\n                  onClick={handleFavouriteClick}\r\n                  className={customStyles.button}\r\n                >\r\n                  ADD TO FAV{\" \"}\r\n                  {isFavLoadingSpin && (\r\n                    <CircularProgress\r\n                      size={15}\r\n                      color={currBook.is_favourite ? \"secondary\" : \"primary\"}\r\n                      sx={{ marginLeft: \"15px\" }}\r\n                    />\r\n                  )}\r\n                </Button>\r\n                <Button\r\n                  variant={currBook.is_item_in_cart ? \"contained\" : \"outlined\"}\r\n                  onClick={handleAddToCartClick}\r\n                  className={customStyles.button}\r\n                >\r\n                  ADD TO CART{\" \"}\r\n                  {isCartLoadingSpin && (\r\n                    <CircularProgress\r\n                      size={15}\r\n                      color={currBook.is_item_in_cart ? \"secondary\" : \"primary\"}\r\n                      sx={{ marginLeft: \"15px\" }}\r\n                    />\r\n                  )}\r\n                </Button>\r\n              </Box>\r\n              <Box className={customStyles.rating}>\r\n                <Rating\r\n                  name=\"half-rating-read\"\r\n                  defaultValue={currBook.rating}\r\n                  precision={0.5}\r\n                  readOnly\r\n                />\r\n              </Box>\r\n              <Typography className={customStyles.description}>\r\n                Description:\r\n              </Typography>\r\n              {currBook && currBook[\"description\"] && (\r\n                <Box className={customStyles.description}>\r\n                  {currBook[\"description\"].split(\"\\n\").map(\r\n                    (line, index) =>\r\n                      line.trim() !== \"\" && (\r\n                        <React.Fragment key={index}>\r\n                          <Typography className={customStyles.paragraph}>\r\n                            {line}\r\n                          </Typography>\r\n                          <Typography>\r\n                            <br></br>\r\n                          </Typography>\r\n                        </React.Fragment>\r\n                      )\r\n                  )}\r\n                </Box>\r\n              )}\r\n              <Typography\r\n                className={customStyles.title}\r\n                sx={{ marginTop: \"20px\" }}\r\n              >\r\n                Author :{\" \"}\r\n                <Box\r\n                  component=\"span\"\r\n                  sx={{ fontSize: \"24px\", fontWeight: \"400\" }}\r\n                >\r\n                  {currBook.author}\r\n                </Box>\r\n              </Typography>\r\n              <Typography className={customStyles.description}>\r\n                Author Description:\r\n              </Typography>\r\n              {currBook && currBook[\"author_description\"] && (\r\n                <Box className={customStyles.description}>\r\n                  {currBook[\"author_description\"].split(\"\\n\").map(\r\n                    (line, index) =>\r\n                      line.trim() !== \"\" && (\r\n                        <React.Fragment key={index}>\r\n                          <Typography className={customStyles.paragraph}>\r\n                            {line}\r\n                          </Typography>\r\n                          <Typography>\r\n                            <br></br>\r\n                          </Typography>\r\n                        </React.Fragment>\r\n                      )\r\n                  )}\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      ) : null}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default DetailViewPage;\r\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n"],"sourceRoot":""}