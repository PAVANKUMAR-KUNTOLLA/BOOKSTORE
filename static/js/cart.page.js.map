{"version":3,"sources":["webpack:///./src/components/message.js","webpack:///./src/utils/index.js","webpack:///./src/views/Cart/ConfirmationDialogBox.js","webpack:///./src/views/Cart/cart.page.js","webpack:///./src/components/Page.js","webpack:///./src/components/CustomAlert.js"],"names":["Message","navigate","useNavigate","React","Stack","sx","width","spacing","Alert","severity","Link","onClick","thousands_separators","num","num_parts","toString","split","replace","join","customTextStyles","makeStyles","theme","_customizedButton","dialogBox","_defineProperty","borderRadius","breakpoints","down","border","boxShadow","quantityRow","margin","display","flexWrap","alignItems","justifyContent","textAlign","maxWidth","boldText","fontSize","fontWeight","lineHeight","marginBottom","normalText","mainText","opacity","color","marginLeft","marginRight","paper","overflowY","customizedButton","position","left","top","palette","grey","backgroundColor","common","white","confirmButton","padding","ConfirmationDialogBox","_ref","type","open","handleClose","handleConfirm","isLoadingSpin","bookId","customTextClasses","book","useSelector","state","books","find","id","createElement","Dialog","onClose","scroll","classes","className","DialogTitle","DialogContent","dividers","IconButton","CloseIcon","Box","xs","sm","Typography","Avatar","variant","alt","title","src","image","height","Button","disabled","data","quantity","is_item_in_cart","is_favourite","CircularProgress","size","customCartStyles","mainBlock","flexDirection","up","cartBlock","imageBlock","contentBlock","marginTop","cursor","price","maxHeight","favIcon","borderColor","favQuantity","rightBlock","CartPage","cart","_useState2","useMediaQuery","_slicedToArray","useState","isconfirmDialogOpen","setIsconfirmDialogOpen","_useState4","editBookId","setEditBookId","_useState6","orderType","setOrderType","_useState8","setIsLoadingSpin","customStyles","dispatch","useDispatch","_useState10","isAlert","alertTitle","alertText","showAlert","setShowAlert","handleEditBook","payload","privateApiPOST","Api","edit_book","then","response","status","console","log","setBooks","error","handlePlaceOrder","arrayOfArrayIds","map","item","place_order","setTimeout","Page","Container","CustomAlert","length","Grid","container","key","borderTop","concat","handleBookView","handleFavouriteClick","FavoriteIcon","FavoriteBorderIcon","TextField","value","pattern","onChange","e","Math","floor","handleQuantityChange","target","right","handleDeleteChange","DeleteIcon","reduce","acc","toFixed","path","handleNav","forwardRef","ref","children","_ref$title","rest","_objectWithoutProperties","_excluded","_extends","Helmet","propTypes","PropTypes","node","isRequired","string","useStyles","root","alertContainer","minWidth","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","AlertTitle","prototype","bool","func"],"mappings":"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","file":"cart.page.js","sourcesContent":["import * as React from \"react\";\nimport { Alert, Link } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Message() {\n  const navigate = useNavigate();\n  return (\n    <Stack sx={{ width: \"100%\" }} spacing={2}>\n      <Alert severity=\"info\">\n        Your cart is empty.{\" \"}\n        <Link onClick={() => navigate(\"/app/books\")}>View Books</Link>\n      </Alert>\n      {/* <Alert severity=\"warning\">This is a warning alert — check it out!</Alert> */}\n      {/* <Alert severity=\"info\">This is an info alert — check it out!</Alert> */}\n      {/* <Alert severity=\"success\">This is a success alert — check it out!</Alert> */}\n    </Stack>\n  );\n}\n","// Convert React Select Options\r\nexport const convertToSelectOptions = (data) => {\r\n  const Options = [];\r\n  data.sort().map((item, index) => {\r\n    Options.push({\r\n      name: item,\r\n      label: item,\r\n      id: `${item}-${index}`,\r\n    });\r\n  });\r\n  return Options;\r\n};\r\n\r\nexport const capitalizeString = (str) => {\r\n  if (str) return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\r\n  else return \"\";\r\n};\r\n\r\nexport const convertToLabel = (str) => {\r\n  return capitalizeString(str ? str.replaceAll(\"_\", \" \") : \"\");\r\n};\r\n\r\n//  Convert time to Duration\r\nexport function timeSince(date) {\r\n  var seconds = Math.floor((new Date() - date) / 1000);\r\n\r\n  var interval = seconds / 31536000;\r\n\r\n  if (interval > 1) {\r\n    return Math.floor(interval) + \" yrs\";\r\n  }\r\n  interval = seconds / 2592000;\r\n  if (interval > 1) {\r\n    return Math.floor(interval) + \" months\";\r\n  }\r\n  interval = seconds / 86400;\r\n  if (interval > 1) {\r\n    return Math.floor(interval) + \" days\";\r\n  }\r\n  interval = seconds / 3600;\r\n  if (interval > 1) {\r\n    return Math.floor(interval) + \" hrs\";\r\n  }\r\n  interval = seconds / 60;\r\n  if (interval > 1) {\r\n    return Math.floor(interval) + \" mins\";\r\n  }\r\n  return Math.floor(seconds) + \" secs\";\r\n}\r\n\r\n// Convert number to thousand separated string\r\n// eg: 100000 -> 100,000\r\nexport function thousands_separators(num) {\r\n  if (num) {\r\n    var num_parts = num.toString().split(\".\");\r\n    num_parts[0] = num_parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    return num_parts.join(\".\");\r\n  }\r\n  return num;\r\n}\r\n\r\n/**\r\n * Password validator for login pages\r\n */\r\n\r\n// has number\r\nconst hasNumber = (value) => {\r\n  return new RegExp(/[0-9]/).test(value);\r\n};\r\n\r\n// has mix of small and capitals\r\nconst hasMixed = (value) => {\r\n  return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\r\n};\r\n\r\n// has special chars\r\nconst hasSpecial = (value) => {\r\n  return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\r\n};\r\n\r\n// set color based on password strength\r\nexport const strengthColor = (count) => {\r\n  if (count < 2) return { label: \"Poor\", color: value.errorMain };\r\n  if (count < 3) return { label: \"Weak\", color: value.warningDark };\r\n  if (count < 4) return { label: \"Normal\", color: value.orangeMain };\r\n  if (count < 5) return { label: \"Good\", color: value.successMain };\r\n  if (count < 6) return { label: \"Strong\", color: value.successDark };\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator = (value) => {\r\n  let strengths = 0;\r\n  if (value.length > 5) strengths++;\r\n  if (value.length > 7) strengths++;\r\n  if (hasNumber(value)) strengths++;\r\n  if (hasSpecial(value)) strengths++;\r\n  if (hasMixed(value)) strengths++;\r\n  return strengths;\r\n};\r\n\r\n/* Validator function */\r\nexport const validateString = (val) => {\r\n  if (val && typeof val === \"string\" && val.length > 0) return true;\r\n  else return false;\r\n};\r\n\r\nexport const validateArrayData = (val) => {\r\n  if (val && Array.isArray(val) && val.length > 0) return true;\r\n  else return false;\r\n};\r\n\r\nexport const validateObjectData = (val) => {\r\n  if (val && typeof val === \"object\" && Object.keys(val).length > 0)\r\n    return true;\r\n  else return false;\r\n};\r\n\r\nexport const sortArrayObjbyDate = (arr) => {\r\n  return arr.sort((a, b) => new Date(b.x) - new Date(a.x));\r\n};\r\n\r\nexport function shuffle(array) {\r\n  let currentIndex = array.length,\r\n    randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (currentIndex != 0) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex],\r\n      array[currentIndex],\r\n    ];\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\n//FIND which array has greater length compare to others\r\n//-------------------------------------------\r\n// let findLargeArr = [];\r\n\r\n//   let uniqueFamilydata = [...new Set(report_list.map((d) => d[\"family\"]))];\r\n//   uniqueFamilydata.map((family) => {\r\n//     let filteredData = report_list.filter((each) => each[\"family\"] === family);\r\n\r\n//     if (filteredData.length > findLargeArr.length) {\r\n//       familyName = family;\r\n//       findLargeArr = filteredData;\r\n//     }\r\n//   });\r\n\r\nexport function intToString(num) {\r\n  if (typeof num != \"number\") return num;\r\n  num = num.toString().replace(/[^0-9.]/g, \"\");\r\n  if (num < 1000) {\r\n    return num;\r\n  }\r\n  let si = [\r\n    { v: 1e3, s: \"K\" },\r\n    { v: 1e6, s: \"M\" },\r\n    { v: 1e9, s: \"B\" },\r\n    { v: 1e12, s: \"T\" },\r\n    { v: 1e15, s: \"P\" },\r\n    { v: 1e18, s: \"E\" },\r\n  ];\r\n  let index;\r\n  for (index = si.length - 1; index > 0; index--) {\r\n    if (num >= si[index].v) {\r\n      break;\r\n    }\r\n  }\r\n  return (\r\n    (num / si[index].v).toFixed(2).replace(/\\.0+$|(\\.[0-9]*[1-9])0+$/, \"$1\") +\r\n    si[index].s\r\n  );\r\n}\r\n","import React from \"react\";\nimport {\n  Grid,\n  Button,\n  Dialog,\n  Box,\n  DialogActions,\n  DialogContent,\n  CircularProgress,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Typography,\n  Alert,\n  AlertTitle,\n  Avatar,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { makeStyles } from \"@mui/styles\";\nimport { thousands_separators } from \"../../utils/index\";\nimport { useSelector } from \"react-redux\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  dialogBox: {\n    borderRadius: \"10px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      borderRadius: \"20px 20px 0px 0px\",\n      border: \"1px solid rgba(151,151,151, 1)\",\n      boxShadow: \"0px -3px 8px rgba(0,0,0, 0.1)\",\n    },\n  },\n  quantityRow: {\n    margin: \"32px auto 50px\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    textAlign: \"left\",\n    maxWidth: \"230px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: \"24px 20px 40px\",\n    },\n  },\n  boldText: {\n    fontSize: \"18px\",\n    fontWeight: \"600\",\n    lineHeight: \"24px\",\n    marginBottom: \"7px\",\n  },\n  normalText: {\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    lineHeight: \"22px\",\n  },\n  mainText: {\n    opacity: 1,\n    color: \"rgba(71,71,71,1)\",\n    fontSize: \"24px\",\n    fontWeight: \"400\",\n    textAlign: \"center\",\n    lineHeight: \"33px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"20px\",\n      lineHeight: \"27px\",\n      marginLeft: \"8px\",\n      marginRight: \"7px\",\n    },\n  },\n  paper: {\n    overflowY: \"unset\",\n  },\n  customizedButton: {\n    position: \"absolute\",\n    left: \"97.5%\",\n    top: \"-4%\",\n    color: theme.palette.grey[800],\n    backgroundColor: theme.palette.common.white,\n    [theme.breakpoints.down(\"sm\")]: {\n      left: \"93%\",\n      top: \"-5%\",\n    },\n    \"&:hover\": {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  confirmButton: {\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    lineHeight: \"24px\",\n    padding: \"10px 40px 9px\",\n    marginBottom: \"4px\",\n    opacity: 0.8,\n  },\n}));\n\nconst ConfirmationDialogBox = ({\n  type,\n  open,\n  handleClose,\n  handleConfirm,\n  isLoadingSpin,\n  bookId,\n}) => {\n  const customTextClasses = customTextStyles();\n  const books = useSelector((state) => state.books.books);\n  const book = books.find((book) => book.id === bookId);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      scroll=\"paper\"\n      aria-labelledby=\"scroll-dialog-title\"\n      aria-describedby=\"scroll-dialog-description\"\n      classes={{ paper: customTextClasses.paper }}\n      className={customTextClasses.dialogBox}\n    >\n      <DialogTitle id=\"scroll-dialog-title\"></DialogTitle>\n      <DialogContent dividers={false}>\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleClose}\n          className={customTextClasses.customizedButton}\n        >\n          <CloseIcon />\n        </IconButton>\n        {type === \"placeOrder\" ? (\n          <Box>\n            <Box sx={{ margin: { xs: \"0\", sm: \"16px 152px 32px\" } }}>\n              <Typography className={customTextClasses.mainText}>\n                Confirm Investment in SGB Scheme 2021-22 Series IV\n              </Typography>\n            </Box>\n          </Box>\n        ) : (\n          <Box sx={{ textAlign: \"center\", padding: \"20px\" }}>\n            <Avatar\n              variant=\"square\"\n              alt={book.title}\n              src={book.image}\n              sx={{\n                height: 180,\n                width: 130,\n                position: \"relative\",\n                margin: \"8px auto\",\n              }}\n            />\n\n            <Typography className={customTextClasses.boldText}>\n              {book.title}\n            </Typography>\n            <Typography className={customTextClasses.normalText}>\n              Are you sure you want to delete the item from your cart?\n            </Typography>\n\n            <Button\n              sx={{\n                display: \"block\",\n                margin: \"16px auto\",\n              }}\n              disabled={isLoadingSpin}\n              variant=\"contained\"\n              color=\"primary\"\n              className={customTextClasses.confirmButton}\n              onClick={() => {\n                let data = {\n                  id: book.id,\n                  title: book.id,\n                  quantity: 0,\n                  is_item_in_cart: false,\n                  is_favourite: false,\n                };\n                handleConfirm(data);\n              }}\n            >\n              Yes\n              {isLoadingSpin && (\n                <CircularProgress\n                  size={15}\n                  color=\"primary\"\n                  sx={{ marginLeft: \"15px\" }}\n                />\n              )}\n            </Button>\n          </Box>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default ConfirmationDialogBox;\n","import React, { useState, useEffect } from \"react\";\nimport Page from \"../../components/Page\";\nimport Message from \"../../components/message\";\nimport {\n  Box,\n  Container,\n  Grid,\n  Avatar,\n  Typography,\n  TextField,\n  useMediaQuery,\n  Button,\n  IconButton,\n  CircularProgress,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { privateApiGET, privateApiPOST } from \"../../components/PrivateRoute\";\nimport Api from \"../../components/Api\";\nimport { setBooks } from \"../../redux/bookStore/booksSlice\";\nimport { useNavigate, Navigate } from \"react-router-dom\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport { thousands_separators } from \"../../utils\";\nimport ConfirmationDialogBox from \"./ConfirmationDialogBox\";\n\nimport CustomAlert from \"../../components/CustomAlert\";\n\nconst customCartStyles = makeStyles((theme) => ({\n  mainBlock: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    [theme.breakpoints.up(\"sm\")]: {\n      flexDirection: \"row\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  cartBlock: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    position: \"relative\",\n  },\n  imageBlock: {\n    width: \"50%\",\n    height: \"100%\",\n  },\n  contentBlock: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    padding: \"0 16px\",\n    marginTop: \"2rem\",\n  },\n  image: {\n    width: \"100%\",\n    height: \"auto\",\n    cursor: \"pointer\",\n  },\n  title: {\n    fontSize: \"16px\",\n    fontWeight: \"500\",\n    lineHeight: \"21px\",\n    marginBottom: \"5px\",\n  },\n  price: {\n    fontWeight: \"700\",\n    fontSize: \"18px\",\n    lineHeight: \"24px\",\n    marginBottom: \"16px\",\n  },\n  quantity: {\n    maxWidth: \"110px\",\n    maxHeight: \"50px\",\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderRadius: \"0\",\n      },\n    },\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      border: \"0.1px solid #bdbdbd\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"40px\",\n      width: \"90px\",\n      \"& .MuiInputBase-input\": {\n        padding: \"10px\",\n      },\n    },\n  },\n  favIcon: {\n    width: \"100px\",\n    height: \"40px\",\n    borderColor: \"1px solid black\",\n    borderRadius: \"0 !important\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(255, 255, 255, 1)\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"40px\",\n      width: \"70px\",\n      padding: \"1px\",\n    },\n  },\n  favQuantity: {\n    display: \"flex\",\n    [theme.breakpoints.down(\"sm\")]: {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      height: \"60px\",\n    },\n  },\n  rightBlock: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    marginTop: \"16px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginTop: \"50px\",\n      marginBottom: \"auto\",\n      marginLeft: \"16px\",\n      marginRight: \"16px\",\n    },\n  },\n}));\n\nconst CartPage = () => {\n  const cart = useSelector((state) => state.books.cart);\n  const matchesSm = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n  const [isconfirmDialogOpen, setIsconfirmDialogOpen] = useState(false);\n  const [editBookId, setEditBookId] = useState(null);\n  const [orderType, setOrderType] = useState(\"placeOrder\");\n  const [isLoadingSpin, setIsLoadingSpin] = useState(false);\n\n  const customStyles = customCartStyles();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n\n  const handleEditBook = (data) => {\n    let payload = data;\n    setIsLoadingSpin(true);\n    privateApiPOST(Api.edit_book, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          dispatch(setBooks(data?.data));\n          setIsconfirmDialogOpen(false);\n          setIsLoadingSpin(false);\n          setEditBookId(\"\");\n          setOrderType(\"placeOrder\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsconfirmDialogOpen(false);\n        setEditBookId(\"\");\n        setOrderType(\"placeOrder\");\n        setIsLoadingSpin(false);\n        if (error.response.status === 401) {\n          navigate(\"/login\");\n        }\n      });\n  };\n\n  const handleEditPlaceOrder = (data) => {\n    let payload = data;\n    setIsLoadingSpin(true);\n    privateApiPOST(Api.place_order, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          dispatch(setBooks(data?.data));\n          setShowAlert({\n            isAlert: true,\n            alertTitle: \"\",\n            alertText: \"Order Placed Successfully\",\n            severity: \"success\",\n          });\n          setIsLoadingSpin(false);\n          // Navigate to home page after 5 seconds\n          setTimeout(() => {\n            setShowAlert({\n              isAlert: \"\",\n              alertTitle: \"\",\n              alertText: \"\",\n              severity: \"\",\n            });\n          }, 6000);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsLoadingSpin(false);\n      });\n  };\n\n  const handlePlaceOrder = () => {\n    // Display the success alert\n    const arrayOfArrayIds = cart.map((item) => {\n      return { id: item.id };\n    });\n\n    handleEditPlaceOrder(arrayOfArrayIds);\n  };\n\n  const handleFavouriteClick = (id, title, is_favourite) => {\n    const data = { id: id, title: title, is_favourite: !is_favourite };\n    handleEditBook(data);\n  };\n\n  const handleQuantityChange = (id, title, quantity) => {\n    let data = {};\n    if (quantity >= 1 && quantity <= 100) {\n      data = { id: id, title: title, quantity: Math.floor(quantity) };\n    } else {\n      data = { id: id, title: title, quantity: 0 };\n    }\n    handleEditBook(data);\n  };\n\n  const handleDeleteChange = (id) => {\n    setEditBookId(id);\n    setOrderType(\"deleteOrder\");\n    setIsconfirmDialogOpen(true);\n  };\n\n  const handleConfirmChange = (data) => {\n    if (orderType === \"deleteOrder\") {\n      handleEditBook(data);\n    }\n  };\n\n  const handleConfirmationDialogBoxClose = () => {\n    setIsconfirmDialogOpen(false);\n    if (orderType === \"deleteOrder\") {\n      setOrderType(\"placeOrder\");\n      setEditBookId(\"\");\n    }\n  };\n\n  const handleNav = (value) => {\n    let path = `/app/${value}`;\n    navigate(path);\n  };\n\n  const handleBookView = (id, title) => {\n    console.log(title);\n    navigate(`/app/books/${id}/${title}`);\n  };\n\n  return (\n    <Page title=\"Cart\">\n      <Box className={customStyles.mainBlock} maxWidth={\"lg\"}>\n        <Container maxWidth=\"sm\">\n          {showAlert.isAlert ? (\n            <CustomAlert\n              open={showAlert.isAlert}\n              severity={showAlert.severity}\n              alertTitle={showAlert.alertTitle}\n              alertText={showAlert.alertText}\n              onClose={() =>\n                setShowAlert({\n                  isAlert: false,\n                  alertTitle: \"\",\n                  alertText: \"\",\n                  severity: \"\",\n                })\n              }\n            />\n          ) : null}\n          {cart && cart.length > 0 ? (\n            cart.map((book, id) => (\n              <Grid\n                container\n                key={id}\n                className={customStyles.cartBlock}\n                sx={{\n                  borderRadius: \"4px\",\n                  boxShadow: \"0 1px 6px rgba(0,0,0, 0.095389)\",\n                  backgroundColor: \"rgba(255,255,255, 1)\",\n                  borderTop: \"1px solid #E5E5E5\",\n                  marginTop: \"10px\",\n                  marginBottom: \"10px\",\n                }}\n              >\n                <Grid item xs={4} className={customStyles.imageBlock}>\n                  <Avatar\n                    variant=\"square\"\n                    src={book.image}\n                    alt={book.title}\n                    className={customStyles.image}\n                    key={book.id}\n                    onClick={() => handleBookView(book.id, book.title)}\n                  />\n                </Grid>\n                <Grid item xs={7} className={customStyles.contentBlock}>\n                  <Typography className={customStyles.title}>\n                    {book.title}\n                  </Typography>\n\n                  <Typography className={customStyles.price}>\n                    Rs. {thousands_separators(book.price)}\n                  </Typography>\n                  <Box className={customStyles.favQuantity}>\n                    <Box\n                      sx={{\n                        border: \"0.1px solid #bdbdbd\",\n                        marginRight: \"10px\",\n                      }}\n                    >\n                      <IconButton\n                        className={customStyles.favIcon}\n                        onClick={() =>\n                          handleFavouriteClick(\n                            book.id,\n                            book.title,\n                            book.is_favourite\n                          )\n                        }\n                      >\n                        {book.is_favourite ? (\n                          <FavoriteIcon\n                            sx={{\n                              color: \"red\",\n                              fontSize: \"35px\",\n                              padding: \"1px\",\n                            }}\n                          />\n                        ) : (\n                          <FavoriteBorderIcon\n                            sx={{\n                              fontSize: \"35px\",\n                              padding: \"1px\",\n                            }}\n                          />\n                        )}\n                      </IconButton>\n                    </Box>\n                    <TextField\n                      type=\"number\"\n                      color=\"secondary\"\n                      value={book.quantity > 0 ? book.quantity : \"\"}\n                      pattern=\"[0-9]\"\n                      className={customStyles.quantity}\n                      onChange={(e) =>\n                        handleQuantityChange(\n                          book.id,\n                          book.title,\n                          e.target.value\n                        )\n                      }\n                    />\n                  </Box>\n                </Grid>\n                <Grid item xs={1}>\n                  <IconButton\n                    sx={{ position: \"absolute\", right: \"0\", top: \"35px\" }}\n                    onClick={() => handleDeleteChange(book.id)}\n                  >\n                    <DeleteIcon sx={{ color: \"#474747\" }} />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            ))\n          ) : (\n            <Message>Your Cart is Empty.</Message>\n          )}\n        </Container>\n        <Container\n          maxWidth=\"sm\"\n          className={customStyles.rightBlock}\n          sx={{\n            borderRadius: \"4px\",\n            boxShadow: \"0 1px 6px rgba(0,0,0, 0.095389)\",\n            backgroundColor: \"rgba(255,255,255, 1)\",\n            borderTop: \"1px solid #E5E5E5\",\n            padding: \"30px\",\n          }}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginBottom: \"16px\",\n            }}\n          >\n            <Typography\n              sx={{\n                fontSize: \"24px\",\n                fontWeight: \"600\",\n                lineHeight: \"27px\",\n              }}\n            >\n              Total\n            </Typography>\n            <Typography\n              sx={{\n                fontSize: \"21px\",\n                fontWeight: \"500\",\n                lineHeight: \"27px\",\n              }}\n            >\n              Rs.{\" \"}\n              {thousands_separators(\n                cart\n                  .reduce((acc, item) => acc + item.quantity * item.price, 0)\n                  .toFixed(2)\n              )}\n            </Typography>\n          </Box>\n          <Typography marginBottom=\"16px\">\n            Tax included and shipping calculated at checkout\n          </Typography>\n          <Typography marginBottom=\"16px\">\n            Orders will be processed in INR.\n          </Typography>\n\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginTop: { xs: \"12px\" },\n            }}\n          >\n            <Button variant=\"outlined\" onClick={() => handleNav(\"Books\")}>\n              shop more\n            </Button>\n\n            {cart\n              .reduce((acc, item) => acc + item.quantity * item.price, 0)\n              .toFixed(2) > 0 ? (\n              <Button\n                variant=\"contained\"\n                onClick={() => handlePlaceOrder()}\n                disabled={isLoadingSpin}\n              >\n                place Order\n                {isLoadingSpin && (\n                  <CircularProgress\n                    size={15}\n                    color=\"secondary\"\n                    sx={{ marginLeft: \"15px\" }}\n                  />\n                )}\n              </Button>\n            ) : (\n              <Button disabled>CHECKOUT</Button>\n            )}\n          </Box>\n        </Container>\n      </Box>\n\n      <ConfirmationDialogBox\n        open={isconfirmDialogOpen}\n        handleClose={handleConfirmationDialogBoxClose}\n        handleConfirm={handleConfirmChange}\n        type={orderType}\n        isLoadingSpin={isLoadingSpin}\n        bookId={editBookId}\n      />\n    </Page>\n  );\n};\n\nexport default CartPage;\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Snackbar } from \"@mui/material\";\nimport { Alert, AlertTitle } from \"@mui/material\";\n\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(10),\n    boxShadow: \"-2px 5px 15px -2px rgba(0,0,0,0.71)\",\n  },\n  alertContainer: {\n    minWidth: 350,\n  },\n}));\n\nconst CustomAlert = ({ open, severity, alertTitle, alertText, onClose }) => {\n  let vertical = \"top\",\n    horizontal = \"right\";\n\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical, horizontal }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={onClose}\n      className={classes.root}\n    >\n      <Alert\n        severity={severity}\n        onClose={onClose}\n        className={classes.alertContainer}\n      >\n        {alertTitle ? <AlertTitle>{alertTitle}</AlertTitle> : null}\n        {alertText}!\n      </Alert>\n    </Snackbar>\n  );\n};\n\nCustomAlert.prototype = {\n  open: PropTypes.bool,\n  severity: PropTypes.string, //['success','warning', 'error']\n  alertText: PropTypes.string,\n  alertTitle: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport default CustomAlert;\n"],"sourceRoot":""}