{"version":3,"sources":["webpack:///./src/views/Auth/RegisterView.js","webpack:///./src/components/Page.js","webpack:///./src/components/CustomAlert.js"],"names":["useStyles","makeStyles","theme","_rightSide","root","backgroundColor","palette","background","dark","height","alert","_defineProperty","position","right","top","breakpoints","down","maxWidth","logo","width","menuPaper","maxHeight","mainBlock","display","flexDirection","margin","padding","leftSide","title","fontFamily","fontWeight","fontSize","textAlign","lineHeight","color","marginTop","marginBottom","rightSide","justifyContent","alignItems","up","paddingLeft","RegisterView","classes","_useState2","_slicedToArray","useState","isAlert","alertTitle","alertText","severity","showAlert","setShowAlert","React","createElement","Page","className","Container","Box","Typography","CustomAlert","open","onClose","PerfectScrollbar","Formik","initialValues","name","email","password","passwordConfirmation","phone_no","address","college","validationSchema","Yup","shape","max","required","matches","when","is","val","length","then","oneOf","onSubmit","values","_ref","setSubmitting","resetForm","url","Api","signup","config","headers","Cookies","get","axios","post","res","status","error","response","data","_ref2","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","autoComplete","mb","variant","TextField","Boolean","fullWidth","helperText","label","onBlur","onChange","value","type","my","Button","disabled","size","Link","component","RouterLink","to","forwardRef","ref","children","_ref$title","rest","_objectWithoutProperties","_excluded","_extends","Helmet","propTypes","PropTypes","node","isRequired","string","spacing","boxShadow","alertContainer","minWidth","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","AlertTitle","prototype","bool","func"],"mappings":"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","file":"RegisterView.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport {\n  Box,\n  Button,\n  Container,\n  Link,\n  TextField,\n  Typography,\n} from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\n\nimport CustomAlert from \"../../components/CustomAlert\";\n\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport Api from \"../../components/Api\";\nimport Page from \"../../components/Page\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: \"100%\",\n  },\n  alert: {\n    position: \"absolute\",\n    right: 50,\n    top: 50,\n    [theme.breakpoints.down(\"sm\")]: {\n      right: 20,\n      maxWidth: 250,\n    },\n  },\n  logo: {\n    width: 100,\n  },\n  menuPaper: {\n    maxHeight: 200,\n  },\n  mainBlock: {\n    width: \"100%\",\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    margin: \"0\",\n    padding: \"0\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  leftSide: {\n    width: \"100%\",\n    height: \"100vh\",\n    backgroundColor: \"#2069D8\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      height: \"40vh\",\n      margin: \"0\",\n    },\n  },\n\n  title: {\n    fontFamily: \"Montserrat\",\n    fontWeight: \"700\",\n    fontSize: \"72px\",\n    textAlign: \"center\",\n    lineHeight: \"87.7px\",\n    color: \"#FFFFFF\",\n    margin: \"auto\",\n    marginTop: \"50vh\",\n    marginBottom: \"auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: \"10vh\",\n    },\n  },\n\n  rightSide: {\n    width: \"100%\",\n    height: \"100vh\",\n    backgroundColor: \"#F5F5F5\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\", // Center vertically\n    alignItems: \"center\", // Center horizontally\n    margin: \"0\",\n    padding: \"0\", // Reset padding\n    [theme.breakpoints.up(\"md\")]: {\n      paddingLeft: \"244px\", // Adjust padding for medium and larger screens\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\", // Set width to 100%\n      paddingLeft: \"0\", // Reset padding\n      justifyContent: \"center\", // Center vertically\n      alignItems: \"center\", // Center horizontally\n    },\n  },\n}));\n\nconst RegisterView = () => {\n  const classes = useStyles();\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n\n  return (\n    <Page className={classes.root} title=\"Register\">\n      <Container className={classes.mainBlock}>\n        <Box className={classes.leftSide}>\n          <Typography className={classes.title}>LIBRARY.</Typography>\n        </Box>\n        <Box className={classes.rightSide}>\n          {showAlert.isAlert ? (\n            <CustomAlert\n              open={showAlert.isAlert}\n              severity={showAlert.severity}\n              alertTitle={showAlert.alertTitle}\n              alertText={showAlert.alertText}\n              onClose={() =>\n                setShowAlert({\n                  isAlert: false,\n                  alertTitle: \"\",\n                  alertText: \"\",\n                  severity: \"\",\n                })\n              }\n            />\n          ) : null}\n\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            height=\"100%\"\n            justifyContent=\"center\"\n          >\n            <PerfectScrollbar>\n              <Container maxWidth=\"sm\">\n                <Box\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  marginBottom={2}\n                >\n                  {/* We can place our logo here */}\n                </Box>\n                <Formik\n                  initialValues={{\n                    name: \"\",\n                    email: \"\",\n                    password: \"\",\n                    passwordConfirmation: \"\",\n                    phone_no: \"\",\n                    address: \"\",\n                    college: \"\",\n                  }}\n                  validationSchema={Yup.object().shape({\n                    name: Yup.string().max(255).required(\"name is required\"),\n                    email: Yup.string()\n                      .email(\"Must be a valid email\")\n                      .max(255)\n                      .required(\"Email is required\"),\n\n                    password: Yup.string()\n                      .required(\"Please enter your password\")\n                      .matches(\n                        /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n                        \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\n                      ),\n                    passwordConfirmation: Yup.string().when(\"password\", {\n                      is: (val) => (val && val.length > 0 ? true : false),\n                      then: Yup.string().oneOf(\n                        [Yup.ref(\"password\")],\n                        \"Both password need to be the same\"\n                      ),\n                    }),\n                    phone_no: Yup.string()\n                      .required(\"phone number is required\")\n                      .matches(\n                        /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,\n                        \"Phone number is not valid\"\n                      ),\n                    address: Yup.string()\n                      .max(255)\n                      .required(\"address is required\"),\n                    college: Yup.string()\n                      .max(255)\n                      .required(\"college is required\"),\n                  })}\n                  onSubmit={(values, { setSubmitting, resetForm }) => {\n                    const url = Api.signup;\n\n                    const config = {\n                      headers: {\n                        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n                      },\n                    };\n\n                    axios\n                      .post(url, values, config)\n                      .then((res) => {\n                        if (res.status === 200) {\n                          setShowAlert({\n                            isAlert: true,\n                            alertText: \"Your are successfully registered.\",\n                            severity: \"success\",\n                          });\n                          setSubmitting(false);\n                          resetForm();\n                        }\n                      })\n                      .catch((error) => {\n                        if (error.response) {\n                          const { data } = error.response;\n                          setShowAlert({\n                            isAlert: true,\n                            alertText: data?.[\"message\"],\n                            severity: \"error\",\n                            alertTitle: \"Error\",\n                          });\n                          // resetForm();\n                          setSubmitting(false);\n                        }\n                      });\n                  }}\n                >\n                  {({\n                    errors,\n                    handleBlur,\n                    handleChange,\n                    handleSubmit,\n                    isSubmitting,\n                    touched,\n                    values,\n                  }) => (\n                    <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                      <Box mb={3}>\n                        <Typography color=\"textPrimary\" variant=\"h2\">\n                          Register\n                        </Typography>\n                      </Box>\n\n                      <TextField\n                        error={Boolean(touched.name && errors.name)}\n                        fullWidth\n                        helperText={touched.name && errors.name}\n                        label=\"Name\"\n                        margin=\"normal\"\n                        name=\"name\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.name}\n                        variant=\"outlined\"\n                      />\n\n                      <TextField\n                        error={Boolean(touched.email && errors.email)}\n                        fullWidth\n                        helperText={touched.email && errors.email}\n                        label=\"Email Address\"\n                        margin=\"normal\"\n                        name=\"email\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"email\"\n                        value={values.email}\n                        variant=\"outlined\"\n                      />\n\n                      <TextField\n                        error={Boolean(touched.password && errors.password)}\n                        fullWidth\n                        helperText={touched.password && errors.password}\n                        label=\"Password\"\n                        margin=\"normal\"\n                        name=\"password\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.password}\n                        variant=\"outlined\"\n                      />\n                      <TextField\n                        error={Boolean(\n                          touched.passwordConfirmation &&\n                            errors.passwordConfirmation\n                        )}\n                        fullWidth\n                        helperText={\n                          touched.passwordConfirmation &&\n                          errors.passwordConfirmation\n                        }\n                        label=\"Confirm Password\"\n                        margin=\"normal\"\n                        name=\"passwordConfirmation\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.passwordConfirmation}\n                        variant=\"outlined\"\n                      />\n                      <TextField\n                        error={Boolean(touched.phone_no && errors.phone_no)}\n                        fullWidth\n                        helperText={touched.phone_no && errors.phone_no}\n                        label=\"Phone number\"\n                        margin=\"normal\"\n                        name=\"phone_no\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.phone_no}\n                        variant=\"outlined\"\n                      />\n                      <TextField\n                        error={Boolean(touched.address && errors.address)}\n                        fullWidth\n                        helperText={touched.address && errors.address}\n                        label=\"Address\"\n                        margin=\"normal\"\n                        name=\"address\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.address}\n                        variant=\"outlined\"\n                      />\n\n                      <TextField\n                        error={Boolean(touched.college && errors.college)}\n                        fullWidth\n                        helperText={touched.college && errors.college}\n                        label=\"College\"\n                        margin=\"normal\"\n                        name=\"college\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.college}\n                        variant=\"outlined\"\n                      />\n\n                      <Box my={2}>\n                        <Button\n                          color=\"primary\"\n                          disabled={isSubmitting}\n                          fullWidth\n                          size=\"large\"\n                          type=\"submit\"\n                          variant=\"contained\"\n                        >\n                          Sign up\n                        </Button>\n                      </Box>\n                      <Typography color=\"textSecondary\" variant=\"body1\">\n                        Have an account?{\" \"}\n                        <Link component={RouterLink} to=\"/login\" variant=\"h6\">\n                          Sign in\n                        </Link>\n                      </Typography>\n                    </form>\n                  )}\n                </Formik>\n              </Container>\n            </PerfectScrollbar>\n          </Box>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default RegisterView;\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Snackbar } from \"@mui/material\";\nimport { Alert, AlertTitle } from \"@mui/material\";\n\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(10),\n    boxShadow: \"-2px 5px 15px -2px rgba(0,0,0,0.71)\",\n  },\n  alertContainer: {\n    minWidth: 350,\n  },\n}));\n\nconst CustomAlert = ({ open, severity, alertTitle, alertText, onClose }) => {\n  let vertical = \"top\",\n    horizontal = \"right\";\n\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical, horizontal }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={onClose}\n      className={classes.root}\n    >\n      <Alert\n        severity={severity}\n        onClose={onClose}\n        className={classes.alertContainer}\n      >\n        {alertTitle ? <AlertTitle>{alertTitle}</AlertTitle> : null}\n        {alertText}!\n      </Alert>\n    </Snackbar>\n  );\n};\n\nCustomAlert.prototype = {\n  open: PropTypes.bool,\n  severity: PropTypes.string, //['success','warning', 'error']\n  alertText: PropTypes.string,\n  alertTitle: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport default CustomAlert;\n"],"sourceRoot":""}